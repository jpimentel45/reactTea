{"version":3,"sources":["reducers/itemReducer.js","reducers/index.js","actions/types.js","store.js","components/MainMenu.js","actions/itemActions.js","components/ShoppingList.js","components/Special.js","components/home.js","components/ItemModal.js","components/sign-up.js","components/login-form.js","components/Profile.js","components/reset-password.js","components/Navbar.js","App.js","serviceWorker.js","index.js","logo.svg","menu.jpg","home.jpg"],"names":["initialState","items","loading","combineReducers","item","state","action","type","payload","filter","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Menu","src","menu","className","alt","Container","id","Row","Col","Card","Body","Form","map","key","Check","label","ButtonToolbar","Button","variant","Component","getItems","dispatch","setItemsLoading","axios","get","then","res","data","ShoppingList","onDeleteClick","props","deleteItem","this","ListGroup","TransitionGroup","name","CSSTransition","ListGroupItem","color","size","onClick","bind","connect","delete","date","Home","home","ItemModal","modal","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newItem","addItem","style","marginBottom","Modal","isOpen","ModalHeader","FormGroup","Label","for","Input","placeholder","marginTop","block","post","Signup","renderRedirectToHome","to","username","password","first_name","last_name","confirmPassword","submitButtonState","handleSubmit","handleChange","event","validateEmail","console","log","toLowerCase","response","error","children","push","alert","catch","test","String","htmlFor","disabled","LoginForm","redirectTo","status","localStorage","setItem","updateUser","loggedIn","pathname","width","validatePasswords","validateFields","confirmpassword","length","email","ref","Navbar","logout","getUser","getusername","user","removeItem","location","usertoken","undefined","token","decoded","jwt_decode","userLink","logo","exact","path","render","component","MainMenu","Profile","Special","App","checkUser","componentDidMount","userObject","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0c86ba32.chunk.js","sourcesContent":["import {GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING} from '../actions/types'\n\nconst initialState = {\n    items: [],\n    loading: false\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\ncase GET_ITEMS: \nreturn{\n    ...state,\n    items: action.payload,\n    loading: false\n}\ncase DELETE_ITEM: \nreturn {\n    ...state,\n    items: state.items.filter(item => item._id !== action.payload)\n}\n        case ADD_ITEM:\n            return {\n                ...state,\n                items: [action.payload, ...state.items]\n            }\n        case ITEMS_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\ndefault:\n    return state;\n    }\n}","import {combineReducers} from 'redux'\nimport itemReducer from './itemReducer'\n\nexport default combineReducers({\n    item: itemReducer\n});","export const GET_ITEMS = \"GET_ITEMS\"\nexport const ADD_ITEM = \"ADD_ITEM\"\nexport const DELETE_ITEM = \"DELETE_ITEM\"\nexport const ITEMS_LOADING = \"ITEMS_LOADING\"","import {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst intitialState ={};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, intitialState, compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store;","// Include React\nimport React, { Component } from \"react\";\n// import Jumbotron from \"react-bootstrap/Jumbotron\";\n// import Card from \"react-bootstrap/Card\";\n// import ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\n// import Button from \"react-bootstrap/Button\";\nimport { Form, Card, ButtonToolbar, Button, Container, Row, Col, } from \"react-bootstrap\";\nimport './CSS/style.css';\n\nimport menu from '../menu.jpg';\n// import Jumbotron from './Jumbotron'\n\n\n// import nav bar\n// import pictures\n\n// Create drinks menu component\nexport default class Menu extends Component {\n    render() {\n        return (\n            <div>\n\n\n                <div>\n                    <img src={menu} className=\"menu-img\" alt=\"menu\" />\n\n                </div>\n\n                <Container>\n                    <div className=\"container\" id=\"menuItems\">\n                        <Row>\n                            <Col>\n                                <Card>\n                                    <Card.Body>\n                                        <h2>\n                                            Smoothies\n                            </h2>\n                                        <p className=\"soy\">\n                                            Soymilk and Almond Milk available on request. Orgnaic milk 60¢\n                            </p>\n                                        <h4>$4.25</h4>\n                                        <Form>\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Green Apple ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Mango ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Passion Fruit ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Peach ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                        </Form>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                            <Col>\n                                <Card>\n                                    <Card.Body>\n                                        <h2>\n                                            Fresh Fruit Juice\n                            </h2>\n                            \n                                        <h4>$4.75</h4>\n                                        <Form>\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Honey Dew${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Orange ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Watermelon ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Lemon Honey ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                        </Form>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                            <Col>\n                                <Card>\n                                    <Card.Body>\n                                        <h2>\n                                            Coffee\n                            </h2>\n                                        <h4>$4.75</h4>\n                                        <Form>\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Americano ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Hot Chocolate ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Latte ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                            {['radio'].map(type => (\n                                                <div key={`default-${type}`} className=\"mb-3\">\n                                                    <Form.Check\n                                                        type={type}\n                                                        id={`default-${type}`}\n                                                        label={`Sea Salt Latte ${type}`}\n                                                    />\n                                                </div>\n                                            ))}\n                                        </Form>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n\n                        </Row>\n                    </div>\n                </Container>\n                <ButtonToolbar>\n                    <Button variant=\"primary\">Checkout</Button>\n                </ButtonToolbar>\n\n            </div>\n        )\n    }\n}","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING} from './types'\nimport axios from 'axios'\n\n//thunk allows us to use asychronous request\nexport const getItems = () => dispatch => {\n   dispatch(setItemsLoading);\n   axios\n   //from our backend proxy: allows us to do this from packagejson\n       .get('/api/special')\n   .then(res => \n    dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n    }))\n}\n\nexport const deleteItem = (id) => dispatch => {\n   axios\n   .delete(`/api/special/${id}`)\n   .then(res => \n    dispatch({\n        type: DELETE_ITEM,\n        payload: id\n    }))\n}\n\n//item comes in with id and name \nexport const addItem = (item) => dispatch => {\n  axios\n  .post('/api/special/', item)\n  .then(res => \n    dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n    }))\n}\n\n//dispatch items loading\nexport const setItemsLoading = () => {\n    return {\n        //sets false to true \n        type: ITEMS_LOADING\n    }\n}","import React, {Component} from 'react';\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport {connect} from 'react-redux'\nimport {getItems, deleteItem,} from '../actions/itemActions'\nimport PropTypes from 'prop-types'\n\nclass ShoppingList extends Component {\ncomponentDidMount(){\n    this.props.getItems();\n}\n\nonDeleteClick = (id) =>{\nthis.props.deleteItem(id)\n}\n   render(){\n       //using destructuring instead of this.state.items\n       const { items } = this.props.item;\n       \n       return(\n           \n           <Container>\n            <ListGroup>\n                   <TransitionGroup className=\"shopping-list\">\n                   {items.map(({_id,name})=>(\n                       <CSSTransition key={_id} >\n                           <ListGroupItem>\n                               {/* button to delete items */}\n                               <Button className=\"remove-btn\"\n                               color=\"danger\"\n                               size=\"sm\"\n                               onClick={this.onDeleteClick.bind(this, _id)}\n                               >\n                                   X\n                               </Button>\n                               {name}\n                           </ListGroupItem>\n                       </CSSTransition>\n                   ))}\n                   </TransitionGroup>\n               </ListGroup>\n           </Container>\n         \n       )\n   }\n}\n\nShoppingList.propTypes = {\ngetItems: PropTypes.func.isRequired,\nitem: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n    item: state.item\n})\n\nexport default connect(mapStateToProps, {getItems, deleteItem})(ShoppingList);","import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'\nimport { getItems} from '../actions/itemActions'\nimport PropTypes from 'prop-types'\n\nclass ShoppingList extends Component {\n    componentDidMount() {\n        this.props.getItems();\n    }\n\n \n    render() {\n        //using destructuring instead of this.state.items\n        const { items } = this.props.item;\n\n        return (\n\n            <Container>\n                <ListGroup>\n                    <TransitionGroup className=\"shopping-list\">\n                        {items.map(({ _id, name, date }) => (\n                            <CSSTransition key={_id} >\n                                <ListGroupItem>\n                                    {name}\n                                    {date}\n                                </ListGroupItem>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </ListGroup>\n            </Container>\n\n        )\n    }\n}\n\nShoppingList.propTypes = {\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n    item: state.item\n})\n\nexport default connect(mapStateToProps, { getItems})(ShoppingList);","import React, { Component } from 'react'\r\nimport { Container, Row, Col, } from \"react-bootstrap\";\r\n\r\nimport home from '../home.jpg';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <img src={home} className=\"home-img\" alt=\"home\" />\r\n                </div>\r\n\r\n                <Container className=\"home-info\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h2>LOCATIONS</h2>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h4>West Covina</h4>\r\n                                    <p>2540 S. Azusa Ave</p>\r\n                                    <p>West Covina, CA 91792</p>\r\n                                    <p>(626)541-7020</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <h4>Pasedena</h4>\r\n                                    <p>1443 E. Colorado Blvd</p>\r\n                                    <p>Pasadena, CA 91107</p>\r\n                                    <p>(626)396-0886</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h2>BUSINESS HOURS</h2>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h4>Monday — Friday</h4>\r\n                                    <p>10:00 am — Midnight</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <h4>Saturday — Sunday</h4>\r\n                                    <p>11:00 am — Midnight</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, {Component} from  'react'\nimport {Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {addItem} from '../actions/itemActions'\n//import { threadId } from 'worker_threads';\n\nclass ItemModal extends Component {\nstate = {\n    modal: false,\n    name: ''\n}\ntoggle = () => {\n    this.setState({\n        modal: !this.state.modal\n    })\n}\n\nonChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n}\nonSubmit = (e) => {\n    e.preventDefault();\n    const newItem = {\nname: this.state.name\n    }\n    \n    //add item via additem action\n    this.props.addItem(newItem)\n\n    //close modal\n    this.toggle();\n}\nrender(){\n    return (\n        <div>\n            \n          <Button\n          color='dark'\n          style={{marginBottom: '2rem'}} \n          onClick={this.toggle}        >\n              Add Item</Button>  \n        <Modal\n        isOpen={this.state.modal}\n        toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>\n                    <h2>Add To Shopping List</h2> \n            </ModalHeader>\n<Form onSubmit={this.onSubmit}>\n    <FormGroup>\n        <Label for='item' className=\"item-title\">\nItem\n        </Label>\n        <Input \n        type='text'\n        name='name'\n        id='item'\n        placeholder=\"Add shopping item\"\n        onChange={this.onChange}\n        />\n        <Button\n        color='dark'\n        style={{marginTop: '2rem'}} block\n        className=\"modal-btn\">\n            Add Item\n        </Button>\n    </FormGroup>\n</Form>\n        </Modal>\n        </div>\n    )\n}\n}\n\nconst mapStateToProps = state =>({\n    item: state.item\n})\nexport default connect(mapStateToProps, {addItem})(ItemModal)","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nclass Signup extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\t// this.submitButtonState = { value: '' };\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tfirst_name: '',\n\t\t\tlast_name: '',\n\t\t\tconfirmPassword: '',\n\t\t\tsubmitButtonState: ''\n\n\t\t}\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t}\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n\t\tthis.validateEmail()\n\t}\n\n\thandleSubmit(event) {\n\t\tconsole.log('sign-up handleSubmit, username: ')\n\t\tconsole.log((this.state.username).toLowerCase())\n\t\tevent.preventDefault()\nconsole.log(this.state.password)\n\t\t//request to server to add a new username/password\n\t\taxios.post('/user/register', {\n\t\t\tusername: (this.state.username).toLowerCase(),\n\t\t\tpassword: this.state.password,\n\t\t\tfirst_name: this.state.first_name,\n\t\t\tlast_name: this.state.last_name\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tif (!response.data.error) {\n\t\t\t\t\tconsole.log('successful signup')\n\t\t\t\t\t// alert(\"User created\")\n\t\t\t\t\t// this.renderRedirectToHome()\n\t\t\t\t\t// this.setState({ //redirect to login page\n\t\t\t\t\t// \tredirectTo: '/login'\n\t\t\t\t\t// })\n\t\t\t\t\tthis.props.children.push('/')\n\t\t\t\t\treturn <Redirect to='/' />\n\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('username already taken')\n\t\t\t\t\talert(\"Username already taken\")\n\t\t\t\t}\n\t\t\t}).catch(error => {\n\t\t\t\tconsole.log('signup error: ')\n\t\t\t\tconsole.log(error)\n\n\t\t\t})\n\t}\n\n\trenderRedirectToHome = () => {\n\n\t\treturn <Redirect to='/' />\n\n\t}\n\n\tvalidateEmail() {\n\t\tvar re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\tif (re.test(String(this.state.username).toLowerCase())) {\n\t\t\tconsole.log(\"ffdas\");\n\t\t\tthis.state.submitButtonState = \"ok\"\n\t\t} else {\n\t\t\tthis.state.submitButtonState = \"\"\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SignupForm\">\n\t\t\t\t\n\t\t\t\t<form className=\"form-horizontal\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"col-1 col-ml-auto\">\n\t\t\t\t\t\t\t<h2>Sign up</h2>\n\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"username\">First Name</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3 col-mr-auto\">\n\t\t\t\t\t\t\t<input className=\"form-input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"first_name\"\n\t\t\t\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"col-1 col-ml-auto\">\n\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"username\">Last Name</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3 col-mr-auto\">\n\t\t\t\t\t\t\t<input className=\"form-input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"last_name\"\n\t\t\t\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"col-1 col-ml-auto\">\n\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"username\">Username</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3 col-mr-auto\">\n\t\t\t\t\t\t\t<input className=\"form-input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"col-1 col-ml-auto\">\n\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"password\">Password </label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3 col-mr-auto\">\n\t\t\t\t\t\t\t<input className=\"form-input\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group \">\n\t\t\t\t\t\t<div className=\"col-7\"></div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-dark btn-primary col-1 col-mr-auto\"\n\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={!this.state.submitButtonState}\n\t\t\t\t\t\t>Sign up</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default Signup\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass LoginForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            redirectTo: null\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        // console.log(event)\r\n        console.log(event.target)\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        console.log('handleSubmit')\r\n\r\n        axios\r\n            .post('/user/login', {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n            .then(response => {\r\n                console.log('login response: ')\r\n                console.log(response)\r\n                if (response.status === 200) {\r\n                    // update App.js state\r\n                    localStorage.setItem('usertoken', response.data)\r\n                    this.props.updateUser({\r\n                        loggedIn: true,\r\n                        username: response.data.username\r\n                    })\r\n                    // update the state to redirect to home\r\n                    this.setState({\r\n                        redirectTo: '/'\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                console.log('login error: ')\r\n                console.log(error);\r\n                alert(\"Username or password incorrect\")\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectTo) {\r\n            return <Redirect to={{ pathname: this.state.redirectTo }} />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    \r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"form-group\">\r\n                            \r\n                            <div className=\"col-1 col-ml-auto\">\r\n                                <h2>Login</h2>\r\n                                <label className=\"form-label\" htmlFor=\"username\">Username</label>\r\n                            </div>\r\n                            <div className=\"col-3 col-mr-auto\">\r\n                                <input className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    id=\"username\"\r\n                                    name=\"username\"\r\n                                    placeholder=\"Username\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"col-1 col-ml-auto\">\r\n                                <label className=\"form-label\" htmlFor=\"password\">Password </label>\r\n                            </div>\r\n                            <div className=\"col-3 col-mr-auto\">\r\n                                <input className=\"form-input\"\r\n                                    placeholder=\"Password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group \">\r\n                            <div className=\"col-7\"></div>\r\n                            <button\r\n                                className=\"btn btn-primary col-1 col-mr-auto\"\r\n\r\n                                onClick={this.handleSubmit}\r\n                                type=\"submit\">Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LoginForm\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n\r\n    render() {\r\n        const imageStyle = {\r\n            width: 400\r\n        }\r\n        return (\r\n            <div>\r\n                <p>It is your profile page</p>\r\n                <img style={imageStyle} src=\"https://seeklogo.net/wp-content/uploads/2011/08/manchester-united-logo-vector.png\" />\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nclass Signup extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\t// this.submitButtonState = { value: '' };\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: '',\n\t\t\tsubmitButtonState: \"\"\n\n\t\t}\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.validateEmail = this.validateEmail.bind(this)\n\t\tthis.validatePasswords = this.validatePasswords.bind(this)\n\t\tthis.validateFields = this.validateFields.bind(this)\n\t}\n\thandleChange(event) {\n\t\tconsole.log(\"handleChange event\")\n\t\tconsole.log(event.target.name)\n\t\tconsole.log(event.target.value)\n\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t}, () => {\n\t\t\tthis.validateFields()\n\t\t\tconsole.log(this.state.password)\n\t\t})\n\t\t// console.log(this.state.password)\n\t\t// this.validateFields()\n\t}\n\n\thandleSubmit(event) {\n\t\tconsole.log('sign-up handleSubmit, username: ')\n\t\tconsole.log((this.state.username).toLowerCase())\n\t\tevent.preventDefault()\n\n\t\t//request to server to add a new username/password\n\t\taxios.post('/user/resetpassword', {\n\t\t\tusername: (this.state.username).toLowerCase(),\n\t\t\tpassword: this.state.password,\n\t\t\tconfirmpassword: this.state.confirmpassword,\n\t\t\t// first_name: this.state.first_name,\n\t\t\t// last_name: this.state.last_name\n\t\t})\n\t\t\t.then(response => {\n\n\t\t\t\tconsole.log(\"change password response\")\n\t\t\t\tconsole.log(response)\n\t\t\t\tif (!response.data.error) {\n\t\t\t\t\tconsole.log('successful change of password')\n\t\t\t\t\talert(\"Password changed\")\n\t\t\t\t\t// alert(\"User created\")\n\t\t\t\t\t// this.renderRedirectToHome()\n\t\t\t\t\t// this.setState({ //redirect to login page\n\t\t\t\t\t// \tredirectTo: '/login'\n\t\t\t\t\t// })\n\n\n\n\t\t\t\t\t// this.props.children.push('/')\n\t\t\t\t\t// return <Redirect to='/' />\n\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Username does not exist')\n\t\t\t\t\talert(\"Username does not exist\")\n\t\t\t\t}\n\t\t\t}).catch(error => {\n\t\t\t\tconsole.log('signup error: ')\n\t\t\t\tconsole.log(error)\n\n\t\t\t})\n\t}\n\n\trenderRedirectToHome = () => {\n\n\t\treturn <Redirect to='/' />\n\n\t}\n\n\tvalidateEmail() {\n\t\tvar re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\tif (re.test(String(this.state.username).toLowerCase())) {\n\t\t\tconsole.log(\"email OK\")\n\t\t\treturn true\n\n\t\t\t// this.state.submitButtonState = \"ok\"\n\t\t} else {\n\t\t\treturn false\n\n\t\t}\n\t}\n\tvalidatePasswords() {\n\t\tconsole.log(this.state.password.length)\n\t\tconsole.log(\"password\")\n\t\tconsole.log(this.state.password)\n\t\tconsole.log(\"confirm password\")\n\t\tconsole.log(this.state.confirmPassword)\n\t\tif (this.state.password.length > 7 && this.state.confirmPassword.length > 7) {\n\t\t\tif (this.state.password == this.state.confirmPassword) {\n\t\t\t\tconsole.log(\"password OK\")\n\t\t\t\treturn true\n\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tvalidateFields() {\n\t\tlet email = this.validateEmail()\n\t\tlet password = this.validatePasswords()\n\t\tconsole.log(\"email result\")\n\t\tconsole.log(email)\n\t\tconsole.log(\"password result\")\n\t\tconsole.log(password)\n\n\t\tif (email && password) {\n\t\t\tthis.setState({ submitButtonState: \"1\" })\n\n\t\t\t// if (this.state.submitButtonState !== 1) {\n\t\t\t// \tthis.handleChange\n\t\t\t// \tconsole.log(\" enabling submit\")\n\t\t\t// }\n\t\t\tconsole.log(\" enabling submit\")\n\t\t\treturn true\n\n\n\t\t} else {\n\n\t\t\tthis.state.submitButtonState = \"\"\n\t\t\tconsole.log(\"not enabling submit\")\n\t\t\treturn true\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SignupForm\">\n\t\t\t\t<h4>Reset Password</h4>\n\t\t\t\t<form className=\"form-horizontal\">\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"col-1 col-ml-auto\">\n\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"username\">Username</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3 col-mr-auto\">\n\t\t\t\t\t\t\t<input className=\"form-input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"col-1 col-ml-auto\">\n\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"password\">Password: </label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3 col-mr-auto\">\n\t\t\t\t\t\t\t<input className=\"form-input\"\n\t\t\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"col-1 col-ml-auto\">\n\t\t\t\t\t\t\t<label className=\"form-label\" htmlFor=\"password\">Confirm Password: </label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3 col-mr-auto\">\n\t\t\t\t\t\t\t<input className=\"form-input\"\n\t\t\t\t\t\t\t\tplaceholder=\"confirm Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group \">\n\t\t\t\t\t\t<div className=\"col-7\"></div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-primary col-1 col-mr-auto\"\n\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tid=\"submitId\"\n\t\t\t\t\t\t\tref=\"submitId\"\n\t\t\t\t\t\t\t// disabled={false}\n\t\t\t\t\t\t\tdisabled={!this.state.submitButtonState}\n\t\t\t\t\t\t>Reset Password</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\n\nexport default Signup\n","import React, { Component } from 'react'\n// import { Redirect } from 'react-router-dom'\nimport {Route, Link, Redirect} from 'react-router-dom'\nimport logo from '../logo.svg'\nimport './CSS/style.css';\nimport axios from 'axios'\nimport jwt_decode from 'jwt-decode'\nimport MainMenu from './MainMenu'\nimport ShoppingList from './ShoppingList';\nimport Special from './Special';\nimport Home from './home'\nimport { Container } from 'reactstrap'\nimport ItemModal from './ItemModal'\n\n// components\nimport Signup from './sign-up'\nimport LoginForm from './login-form'\n\nimport Profile from './Profile'\nimport ResetPassword from './reset-password'\n\nclass Navbar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            password: '',\n            redirectTo: null\n        }\n   \n        this.logout = this.logout.bind(this)\n        this.getUser = this.getUser.bind(this)\n        this.getusername = this.getusername.bind(this)\n    }\n\n    getUser() {\n        axios.get('/user/profile').then(response => {\n            console.log('Get user response: ')\n            console.log(response.data)\n            if (response.data.user) {\n                console.log('Get User: There is a user saved in the server session: ')\n\n                this.setState({\n                    loggedIn: true,\n                    username: response.data.user.username\n                })\n            } else {\n                console.log('Get user: no user');\n                this.setState({\n                    loggedIn: false,\n                    username: null\n                })\n            }\n        })\n    }\n\n    redirectToResetPassword() {\n        axios.get('/user/resetpassword').then(response => {\n            console.log('Get user response: ')\n            console.log(response.data)\n\n            // this.props.push(\"/resetpassword\")\n\n            //         render() { (return <Redirect to='/login' />)\n            // }\n            // if (response.data.user) {\n            //     console.log('Get User: There is a user saved in the server session: ')\n\n            //     this.setState({\n            //         loggedIn: true,\n            //         username: response.data.user.username\n            //     })\n            // } else {\n            //     console.log('Get user: no user');\n            //     this.setState({\n            //         loggedIn: false,\n            //         username: null\n            //     })\n            // }\n        })\n    }\n\n\n    logout(event) {\n        event.preventDefault()\n        console.log('logging out')\n        axios.post('/user/logout').then(response => {\n            console.log(\"response.data under logout\")\n            console.log(response)\n            if (response.status === 200) {\n                console.log(\"response.status is 200 logout\")\n                this.props.updateUser({\n                    loggedIn: false,\n                    username: null\n                })\n                this.setState({\n                    redirectTo: '/'\n                })\n            }\n            localStorage.removeItem('usertoken')\n            // this.props.history.push('/login')\n            console.log(\"deletig token\")\n            // this.props.history.pushState('/login');\n            // this.props.history.pushState('/login');\n            // this.props.history.pushState('/login');\n            // this.props.history.pushState('/login');\n         window.location = '/login'\n        }).catch(error => {\n            console.log('Logout error')\n            console.log(error)\n        })\n    }\n\n    getusername() {\n        console.log(\"inside checkuser\")\n        console.log();\n        if ((localStorage.usertoken) === null || (localStorage.usertoken) === undefined) {\n            console.log(\"Token is null\");\n\n            return <Redirect to='/Login' />\n        }\n        const token = localStorage.usertoken\n        const decoded = jwt_decode(token);\n        console.log(\"decoded under NAVBAR getusername\")\n        console.log(decoded)\n        return (decoded.first_name + \" \" + decoded.last_name)\n    }\n\n\n\n    render() {\n        const loggedIn = this.props.loggedIn;\n        console.log('navbar render, props: ')\n        console.log('navbar render, props: ')\n        console.log('navbar render, props: ')\n        console.log('navbar render, props: ')\n        console.log(this.props);\n\n\n        const userLink = (\n\n\n            <Link to=\"/\" className=\"btn btn-link text-secondary\" >\n                {this.getusername()}</Link>\n\n\n\n        )\n\n        return (\n            <div>\n\n                <header className=\"navbar App-header\" id=\"nav-container\">\n                    <div className=\"col-4 col-mr-auto\">\n                        <div id=\"top-filler\"></div>\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                        {/* <h1 className=\"App-title\">TEASPOTS</h1> */}\n                    </div>\n                    <div className=\"col-4\" >\n                        {loggedIn ? (\n                            <section className=\"navbar-section\">\n                                {localStorage.usertoken ? userLink : \"\"}\n                                <Link to=\"/updateSpecial\" className=\"btn btn-link text-secondary\">\n                                    <span className=\"text-secondary\">Update Special</span>\n                                </Link> \n                                <Link to=\"#\" className=\"btn btn-link text-secondary\" onClick={this.logout}>\n                                    <span className=\"text-secondary\">logout</span></Link>\n                                {/* <Link to=\"/Profile\" className=\"btn btn-link text-secondary\" onClick={this.getUser}>\n                                    <span className=\"text-secondary\">profile</span>\n                                </Link>  */}\n                                \n                                <Link to=\"/signup\" className=\"btn btn-link\" onClick={this.getUser}>\n                                    <span className=\"text-secondary\" >sign up</span>\n                                </Link>\n                               \n                            </section>\n                        ) : (\n                        \n                                <section className=\"navbar-section\">\n                                    <Link to=\"/\" className=\"btn btn-link text-secondary\">\n                                        <span className=\"text-secondary\">Home</span>\n                                    </Link>\n                                    <Link to=\"/menu\" className=\"btn btn-link text-secondary\">\n                                        <span className=\"text-secondary\">Menu</span>\n                                    </Link>\n\n                                    <Link to=\"/special\" className=\"btn btn-link text-secondary\">\n                                        <span className=\"text-secondary\">Daily Special</span>\n                                    </Link>\n\n                                    {/* only employees should be able to update the special */}\n\n                                   \n\n                                    <Link to=\"/login\" className=\"btn btn-link text-secondary\">\n                                        <span className=\"text-secondary\">Login</span>\n                                    </Link>\n                                   \n                                </section>\n                            )}\n                    </div>\n                  \n                </header>\n                \n\n                <Route\n                    exact path=\"/updateSpecial\"\n                    render={() =>\n\n                        <Container>\n                            <h2>Make sure to delete, and add a new special</h2>\n                            <ItemModal />\n                            <ShoppingList />\n                        </Container> } \n                        />\n                \n\n                <Route\n                    exact path=\"/\"\n                    component={Home} \n                    />\n                <Route\n                    exact path=\"/menu\"\n                    component={MainMenu}\n                />\n\n                <Route\n                    exact path=\"/user/profile\"\n                    component={Profile} /> \n\n                {/* <Route\n                    path=\"/login\"\n                    render={() =>\n                        <LoginForm\n                            updateUser={this.updateUser}\n                        />}\n                /> */}\n                <Route\n                    path=\"/signup\"\n                    render={() =>\n                        <Signup />}\n                />\n                <Route\n                    path=\"/resetpassword\"\n                    render={() =>\n                        <ResetPassword />}\n                />\n                <Route\n                    path=\"/special\"\n                    render={() =>\n                        <div className=\"special\">\n                        <h2 >Pasadena Daily Special</h2>\n                        <Special\n                \n                        // updateUser={this.updateUser}\n                        />\n                        </div>}\n                        />\n            </div>\n\n        );\n\n    }\n}\n\nexport default Navbar","\nimport { Provider} from 'react-redux'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport {HashRouter} from 'react-router-dom'\nimport LoginForm from './components/login-form'\nimport React, { Component } from 'react';\nimport axios from 'axios'\nimport { Switch, Route, Link, Redirect } from 'react-router-dom'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      username: null\n    }\n\n    this.getUser = this.getUser.bind(this)\n    this.checkUser = this.checkUser.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.updateUser = this.updateUser.bind(this)\n  }\n\n  componentDidMount() {\n    this.getUser()\n    this.checkUser()\n  }\n\n  updateUser(userObject) {\n    this.setState(userObject)\n  }\n  renderRedirectToHome = () => {\n\n    return <Redirect to='/target' />\n\n  }\n\n  getUser() {\n    axios.get('/user/').then(response => {\n      console.log('Get user response: ')\n      console.log(response.data)\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ')\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        })\n      }\n    })\n  }\n\n  checkUser() {\n    axios.get('/user/profile').then(response => {\n      console.log('Get user response: ')\n      console.log(response.data)\n      // if (response.data.user) {\n      //   console.log('Get User: There is a user saved in the server session: ')\n\n      //   this.setState({\n      //     loggedIn: true,\n      //     username: response.data.user.username\n      //   })\n      // } else {\n      //   console.log('Get user: no user');\n      //   this.setState({\n      //     loggedIn: false,\n      //     username: null\n      //   })\n      // }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Provider store={store}>\n            <div className=\"App\">\n              <Navbar updateUser={this.updateUser} loggedIn={this.state.loggedIn} />\n              {/* greet user if logged in: */}\n              {/* {this.state.loggedIn &&\n                <p>Join the party, {this.state.username}!</p>\n              } */}\n              <Route\n                path=\"/login\"\n                render={() =>\n                  <LoginForm\n                    updateUser={this.updateUser}\n                  />}\n              />\n\n            </div>\n          \n          </Provider>\n        </HashRouter>\n\n\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.195522ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.49005f67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home.c8ba6086.jpg\";"],"sourceRoot":""}